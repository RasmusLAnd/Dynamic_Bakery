// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test__Backery.Models;

namespace Test__Backery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191217125346_SeedAdded")]
    partial class SeedAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test__Backery.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Bread",
                            Description = "Lovely bread made with love"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Cakes",
                            Description = "Delicious cakes for every day"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Cakes for special occasions",
                            Description = "Get ready to PARTY!!!"
                        });
                });

            modelBuilder.Entity("Test__Backery.Models.Pastries", b =>
                {
                    b.Property<int>("PastriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsbackeryOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PastriesId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pastries");

                    b.HasData(
                        new
                        {
                            PastriesId = 1,
                            CategoryId = 1,
                            InStock = true,
                            IsbackeryOfTheWeek = false,
                            LongDescription = "Freshly baked with delicious crumb",
                            Name = "Håndværker",
                            Price = 5m,
                            ShortDescription = "NammeNam"
                        },
                        new
                        {
                            PastriesId = 2,
                            CategoryId = 2,
                            InStock = true,
                            IsbackeryOfTheWeek = false,
                            LongDescription = "o",
                            Name = "Smørkage",
                            Price = 30m,
                            ShortDescription = "Lots of butter"
                        },
                        new
                        {
                            PastriesId = 3,
                            CategoryId = 3,
                            InStock = true,
                            IsbackeryOfTheWeek = true,
                            LongDescription = "Wedding time :-)",
                            Name = "Bryllupskage",
                            Price = 25000m,
                            ShortDescription = "I DO"
                        },
                        new
                        {
                            PastriesId = 4,
                            CategoryId = 1,
                            InStock = true,
                            IsbackeryOfTheWeek = true,
                            LongDescription = "Long bread from France - the true parisian feeling",
                            Name = "Baguette",
                            Price = 20m,
                            ShortDescription = "Long Bread"
                        });
                });

            modelBuilder.Entity("Test__Backery.Models.Pastries", b =>
                {
                    b.HasOne("Test__Backery.Models.Category", "Category")
                        .WithMany("Pastries")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
